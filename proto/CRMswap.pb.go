// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CRMswap.proto

package CRMswap

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SF struct {
	S                    *S       `protobuf:"bytes,1,opt,name=S,proto3" json:"S,omitempty"`
	F                    *F       `protobuf:"bytes,2,opt,name=F,proto3" json:"F,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SF) Reset()         { *m = SF{} }
func (m *SF) String() string { return proto.CompactTextString(m) }
func (*SF) ProtoMessage()    {}
func (*SF) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{0}
}

func (m *SF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SF.Unmarshal(m, b)
}
func (m *SF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SF.Marshal(b, m, deterministic)
}
func (m *SF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SF.Merge(m, src)
}
func (m *SF) XXX_Size() int {
	return xxx_messageInfo_SF.Size(m)
}
func (m *SF) XXX_DiscardUnknown() {
	xxx_messageInfo_SF.DiscardUnknown(m)
}

var xxx_messageInfo_SF proto.InternalMessageInfo

func (m *SF) GetS() *S {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *SF) GetF() *F {
	if m != nil {
		return m.F
	}
	return nil
}

type S struct {
	CustomerId           string   `protobuf:"bytes,1,opt,name=Customer_id,json=CustomerId,proto3" json:"Customer_id,omitempty"`
	CustomerName         string   `protobuf:"bytes,2,opt,name=Customer_name,json=CustomerName,proto3" json:"Customer_name,omitempty"`
	CustomerType         string   `protobuf:"bytes,3,opt,name=Customer_type,json=CustomerType,proto3" json:"Customer_type,omitempty"`
	CustomerEmail        string   `protobuf:"bytes,4,opt,name=Customer_email,json=CustomerEmail,proto3" json:"Customer_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *S) Reset()         { *m = S{} }
func (m *S) String() string { return proto.CompactTextString(m) }
func (*S) ProtoMessage()    {}
func (*S) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{1}
}

func (m *S) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_S.Unmarshal(m, b)
}
func (m *S) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_S.Marshal(b, m, deterministic)
}
func (m *S) XXX_Merge(src proto.Message) {
	xxx_messageInfo_S.Merge(m, src)
}
func (m *S) XXX_Size() int {
	return xxx_messageInfo_S.Size(m)
}
func (m *S) XXX_DiscardUnknown() {
	xxx_messageInfo_S.DiscardUnknown(m)
}

var xxx_messageInfo_S proto.InternalMessageInfo

func (m *S) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *S) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *S) GetCustomerType() string {
	if m != nil {
		return m.CustomerType
	}
	return ""
}

func (m *S) GetCustomerEmail() string {
	if m != nil {
		return m.CustomerEmail
	}
	return ""
}

type F struct {
	Keyvalue             map[string]string `protobuf:"bytes,1,rep,name=keyvalue,proto3" json:"keyvalue,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *F) Reset()         { *m = F{} }
func (m *F) String() string { return proto.CompactTextString(m) }
func (*F) ProtoMessage()    {}
func (*F) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{2}
}

func (m *F) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F.Unmarshal(m, b)
}
func (m *F) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F.Marshal(b, m, deterministic)
}
func (m *F) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F.Merge(m, src)
}
func (m *F) XXX_Size() int {
	return xxx_messageInfo_F.Size(m)
}
func (m *F) XXX_DiscardUnknown() {
	xxx_messageInfo_F.DiscardUnknown(m)
}

var xxx_messageInfo_F proto.InternalMessageInfo

func (m *F) GetKeyvalue() map[string]string {
	if m != nil {
		return m.Keyvalue
	}
	return nil
}

type Response struct {
	Response             bool     `protobuf:"varint,1,opt,name=Response,proto3" json:"Response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac70c21766256814, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

func init() {
	proto.RegisterType((*SF)(nil), "CRMswap.SF")
	proto.RegisterType((*S)(nil), "CRMswap.S")
	proto.RegisterType((*F)(nil), "CRMswap.F")
	proto.RegisterMapType((map[string]string)(nil), "CRMswap.F.KeyvalueEntry")
	proto.RegisterType((*Response)(nil), "CRMswap.Response")
}

func init() { proto.RegisterFile("CRMswap.proto", fileDescriptor_ac70c21766256814) }

var fileDescriptor_ac70c21766256814 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xcb, 0x4b, 0xc3, 0x40,
	0x10, 0xc6, 0x9d, 0xc4, 0x47, 0x3a, 0x31, 0xa2, 0x83, 0x87, 0x25, 0x17, 0x4b, 0xa4, 0xd2, 0x53,
	0x90, 0xe8, 0xa1, 0xe8, 0x49, 0x4a, 0x17, 0x44, 0xf4, 0xb0, 0xf1, 0x2e, 0x91, 0xce, 0xa1, 0xb4,
	0x79, 0x90, 0xa4, 0x95, 0xfc, 0x21, 0xfe, 0xbf, 0x92, 0xd7, 0x86, 0x78, 0x9b, 0x6f, 0xbe, 0xdf,
	0x7c, 0xec, 0xcc, 0xa2, 0xb3, 0x54, 0xef, 0xc5, 0x4f, 0x94, 0xf9, 0x59, 0x9e, 0x96, 0x29, 0x9d,
	0x75, 0xd2, 0x5b, 0xa0, 0x11, 0x4a, 0x12, 0x08, 0xa1, 0x80, 0x29, 0xcc, 0xed, 0x00, 0xfd, 0x9e,
	0x0c, 0x15, 0x84, 0xb5, 0x23, 0x85, 0xf1, 0xcf, 0x91, 0x0a, 0xa4, 0xf7, 0x0b, 0x08, 0x21, 0xdd,
	0xa0, 0xbd, 0xdc, 0x17, 0x65, 0x1a, 0x73, 0xfe, 0xb5, 0x59, 0x37, 0x19, 0x13, 0x85, 0x7d, 0xeb,
	0x75, 0x4d, 0xb7, 0xe8, 0x68, 0x20, 0x89, 0x62, 0x6e, 0xc2, 0x26, 0xea, 0xbc, 0x6f, 0x7e, 0x44,
	0x31, 0x8f, 0xa0, 0xb2, 0xca, 0x58, 0x98, 0x63, 0xe8, 0xb3, 0xca, 0x98, 0x66, 0x78, 0xa1, 0x21,
	0x8e, 0xa3, 0xcd, 0x4e, 0x1c, 0x37, 0x94, 0x1e, 0x5d, 0xd5, 0x4d, 0xef, 0x80, 0x20, 0xe9, 0x11,
	0xad, 0x2d, 0x57, 0x87, 0x68, 0xb7, 0x67, 0x01, 0x53, 0x73, 0x6e, 0x07, 0x62, 0x78, 0xbd, 0xff,
	0xd6, 0x59, 0xab, 0xa4, 0xcc, 0x2b, 0xa5, 0x49, 0xf7, 0x19, 0x9d, 0x91, 0x45, 0x97, 0x68, 0x6e,
	0xb9, 0xea, 0xb6, 0xaa, 0x4b, 0xba, 0xc6, 0x93, 0x36, 0xb5, 0x5d, 0xa3, 0x15, 0x4f, 0xc6, 0x02,
	0xbc, 0x3b, 0xb4, 0x14, 0x17, 0x59, 0x9a, 0x14, 0x4c, 0xee, 0x50, 0x37, 0xc3, 0x96, 0xd2, 0x3a,
	0xb8, 0xc7, 0xfe, 0xf8, 0x34, 0x43, 0x78, 0x21, 0x7b, 0x38, 0xb8, 0x74, 0xaf, 0xb4, 0xe8, 0x79,
	0xef, 0xe8, 0xfb, 0xb4, 0xf9, 0xb3, 0x87, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x86, 0x77, 0x3c,
	0x4c, 0xc4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CRMswapClient is the client API for CRMswap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CRMswapClient interface {
	A(ctx context.Context, in *SF, opts ...grpc.CallOption) (*Response, error)
}

type cRMswapClient struct {
	cc grpc.ClientConnInterface
}

func NewCRMswapClient(cc grpc.ClientConnInterface) CRMswapClient {
	return &cRMswapClient{cc}
}

func (c *cRMswapClient) A(ctx context.Context, in *SF, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/CRMswap.CRMswap/A", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CRMswapServer is the server API for CRMswap service.
type CRMswapServer interface {
	A(context.Context, *SF) (*Response, error)
}

// UnimplementedCRMswapServer can be embedded to have forward compatible implementations.
type UnimplementedCRMswapServer struct {
}

func (*UnimplementedCRMswapServer) A(ctx context.Context, req *SF) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method A not implemented")
}

func RegisterCRMswapServer(s *grpc.Server, srv CRMswapServer) {
	s.RegisterService(&_CRMswap_serviceDesc, srv)
}

func _CRMswap_A_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SF)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CRMswapServer).A(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CRMswap.CRMswap/A",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CRMswapServer).A(ctx, req.(*SF))
	}
	return interceptor(ctx, in, info, handler)
}

var _CRMswap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CRMswap.CRMswap",
	HandlerType: (*CRMswapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "A",
			Handler:    _CRMswap_A_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "CRMswap.proto",
}
