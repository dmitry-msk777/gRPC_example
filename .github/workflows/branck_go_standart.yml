name: Branch_Go

on:
  push:
    branches: [ test_CD_CI ]
  pull_request:
    branches: [ test_CD_CI ]

env:
  # TODO: Change variable to your image's name
  IMAGE_NAME: gprc_example
  GOOS: linux
  GOARCH: amd64
  CGO_ENABLED: 0

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
        #goos: linux
        #goarch: amd64
      env:
        goos: linux
        goarch: amd64
        CGO_ENABLED: 0 

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      env:
        goos: linux
        goarch: amd64
        CGO_ENABLED: 0
      #run: go build -v ./...
      run: |
        echo $GOOS
        echo $GOARCH
        GOOS=linux
        echo ${GITHUB_SHA}
        GOARCH=amd64
        CGO_ENABLED=0
        # CGO_GOARCH=amd64ENABLED=0
        go build -v -ldflags="-X 'gRPC_example/versionbuild.HashCommit=${GITHUB_SHA}'" -o ${IMAGE_NAME}-linux64
        # go build -o ${IMAGE_NAME}-linux64
        echo ${IMAGE_NAME}
        echo ${IMAGE_NAME}-linux64
        echo $GOOS
        echo $GOARCH
      
    - name: Build image
      run: docker build . --file Dockerfile --tag latest

    - name: Login to GitLab Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry.gitlab.com
        username: ${{ secrets.GITLAB_USERNAME }}
        password: ${{ secrets.GITLAB_PASSWORD }}
    
    - name: Tag image to gitlab
      run: docker tag latest registry.gitlab.com/dmitry-msk777/go_my_test_development:latest
      
    - name: Push image to gitlab
      run: docker push registry.gitlab.com/dmitry-msk777/go_my_test_development:latest
      
    - name: Step 1 - Create a temporary artifact downloads folder
      run: |
        mkdir imageDoker
        cp ${IMAGE_NAME}-linux64 imageDoker
        cd imageDoker
        ls
      
    - name: Step 3 - Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: imageDoker-art
        path: imageDoker

   # - name: Test
   #   run: go test -v ./...
     
     
# Push image to GitHub Packages...
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: build

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Step 1 - Create a temporary artifact downloads folder
        run: mkdir imageDoker

      - name: Download math result for job 1
        uses: actions/download-artifact@v2
        with: 
          name: imageDoker-art
          path: imageDoker
          
      - name: Step 1 - Create a temporary artifact downloads folder
        run: |
          cd imageDoker
          ls
          cd ..
          cp imageDoker/${IMAGE_NAME}-linux64 ${IMAGE_NAME}-linux64
          # mkdir imageDoker
          # cp ${IMAGE_NAME}-linux64 imageDoker
          # chmod +x ${IMAGE_NAME}-linux64
          
      - name: Build image
        # run: docker build . --file Dockerfile --tag grpc_example
        run: docker build . --file Dockerfile --tag grpc_example

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: docker tag image to gitlab
        run: docker tag grpc_example ghcr.io/dmitry-msk777/grpc_example/gprc_example:latest
        # run: docker tag grpc_example ghcr.io/dmitry-msk777/grpc_example/gprc_example:test_tag
      
      - name: Push image to gitlab
        run: docker push ghcr.io/dmitry-msk777/grpc_example/gprc_example:latest
        # run: docker push ghcr.io/dmitry-msk777/grpc_example/gprc_example:test_tag
